plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.microservice.stock'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jacoco {
	toolVersion = "0.8.8"  // Use the desired version of Jacoco
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = file("${buildDir}/jacocoHtml")
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	compileOnly 'org.projectlombok:lombok'
	testImplementation 'org.mockito:mockito-core:5.0.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.0.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.mysql:mysql-connector-j'
	//runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
